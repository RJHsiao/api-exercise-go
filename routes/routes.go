package routes

import (
	"net/http"

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"

	"github.com/RJHsiao/api-exercise-go/controllers"

	_ "github.com/RJHsiao/api-exercise-go/docs" // docs is generated by Swag CLI
)

// @title Test API
// @version 1.0.0
// @description Test API with autogenerated swagger doc
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @BasePath /api/v1

// @securityDefinitions.apikey SessionKey
// @in header
// @name Session-Key

var router *mux.Router

// registerIndex Register index
func registerIndex() {
	router.Path("/").Methods(http.MethodGet).HandlerFunc(controllers.SayHello)
}

// registerAPI Register APIs
func registerAPI() {
	router.Path("/api/v1/register").Methods(http.MethodPost).HandlerFunc(controllers.UserRegister)
	router.Path("/api/v1/login").Methods(http.MethodPost).HandlerFunc(controllers.UserLogin)
	router.Path("/api/v1/logout").Methods(http.MethodPost).HandlerFunc(controllers.UserLogout)
	router.Path("/api/v1/user").Methods(http.MethodGet).HandlerFunc(controllers.ShowUserInfo)
	router.Path("/api/v1/user").Methods(http.MethodPatch).HandlerFunc(controllers.EditUserInfo)
}

// registerSwagger Register Swagger
func registerSwagger() {
	router.PathPrefix("/swagger/").Handler(httpSwagger.WrapHandler)
	// A Fxxking workaround that http-swagger doesn't redirect "/swagger/" to "/swagger/index.html"
	router.Path("/swagger/").Handler(http.RedirectHandler("/swagger/index.html", http.StatusPermanentRedirect))
}

func init() {
	router = mux.NewRouter()
	registerIndex()
	registerAPI()
	registerSwagger()
	router.Use(controllers.MiddleWareLogOnCalled)
}

// GetRouter return router
func GetRouter() *mux.Router {
	return router
}
